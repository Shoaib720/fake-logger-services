# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: Fake Services CICD

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: build_push
    displayName: Build & Push
    jobs:
      - job: Build
        steps:
        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'
        - task: Bash@3
          displayName: Download devops artifacts
          inputs:
            targetType: 'inline'
            script: |
              wget -c https://raw.githubusercontent.com/Shoaib720/Dockerfiles/master/nodejs/Dockerfile
        - task: Bash@3
          displayName: Build image
          inputs:
            targetType: inline
            script: |
              cp ./Dockerfile ./user-service
              docker build -t shoaib1999/fake-user-service:$(Build.BuildId) --build-arg "TAG=18-alpine" ./user-service
              docker tag shoaib1999/fake-user-service:$(Build.BuildId) shoaib1999/fake-user-service:latest
        - task: Bash@3
          displayName: Install Trivy
          inputs:
            targetType: inline
            script: |
              wget https://github.com/aquasecurity/trivy/releases/download/v0.20.2/trivy_0.20.2_Linux-64bit.deb
              sudo dpkg -i trivy_0.20.2_Linux-64bit.deb
              trivy -v
        # - task: Bash@3
        #   displayName: Scan image
        #   inputs:
        #     targetType: inline
        #     script: |
        #       trivy i shoaib1999/fake-user-service:$(Build.BuildId)
        - task: Docker@2
          inputs:
            containerRegistry: 'shoaib-personal-dockerhub-con'
            repository: 'fake-user-service'
            command: 'push'
            tags: |
              $(Build.BuildId)
              latest
        
              